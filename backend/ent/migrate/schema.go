// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// InsurancesColumns holds the columns for the "insurances" table.
	InsurancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "insurance", Type: field.TypeInt},
	}
	// InsurancesTable holds the schema information for the "insurances" table.
	InsurancesTable = &schema.Table{
		Name:        "insurances",
		Columns:     InsurancesColumns,
		PrimaryKey:  []*schema.Column{InsurancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RentsColumns holds the columns for the "rents" table.
	RentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rent_age", Type: field.TypeString},
		{Name: "cid_user", Type: field.TypeString},
		{Name: "rent_date", Type: field.TypeString},
		{Name: "insurance_insurance_rent", Type: field.TypeInt, Nullable: true},
		{Name: "room_room_rent", Type: field.TypeInt, Nullable: true},
		{Name: "roomage_roomage_rent", Type: field.TypeInt, Nullable: true},
		{Name: "user_user_rent", Type: field.TypeInt, Nullable: true},
	}
	// RentsTable holds the schema information for the "rents" table.
	RentsTable = &schema.Table{
		Name:       "rents",
		Columns:    RentsColumns,
		PrimaryKey: []*schema.Column{RentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "rents_insurances_InsuranceRent",
				Columns: []*schema.Column{RentsColumns[4]},

				RefColumns: []*schema.Column{InsurancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rents_rooms_RoomRent",
				Columns: []*schema.Column{RentsColumns[5]},

				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rents_roomages_RoomageRent",
				Columns: []*schema.Column{RentsColumns[6]},

				RefColumns: []*schema.Column{RoomagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rents_users_UserRent",
				Columns: []*schema.Column{RentsColumns[7]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "room_status_roomstatus_room", Type: field.TypeInt, Nullable: true},
		{Name: "room_type_roomtype_room", Type: field.TypeInt, Nullable: true},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "rooms_room_status_RoomstatusRoom",
				Columns: []*schema.Column{RoomsColumns[1]},

				RefColumns: []*schema.Column{RoomStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rooms_room_types_RoomtypeRoom",
				Columns: []*schema.Column{RoomsColumns[2]},

				RefColumns: []*schema.Column{RoomTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RoomStatusColumns holds the columns for the "room_status" table.
	RoomStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "room_status", Type: field.TypeString},
	}
	// RoomStatusTable holds the schema information for the "room_status" table.
	RoomStatusTable = &schema.Table{
		Name:        "room_status",
		Columns:     RoomStatusColumns,
		PrimaryKey:  []*schema.Column{RoomStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomTypesColumns holds the columns for the "room_types" table.
	RoomTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "room_type", Type: field.TypeString},
		{Name: "cost", Type: field.TypeInt},
	}
	// RoomTypesTable holds the schema information for the "room_types" table.
	RoomTypesTable = &schema.Table{
		Name:        "room_types",
		Columns:     RoomTypesColumns,
		PrimaryKey:  []*schema.Column{RoomTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomagesColumns holds the columns for the "roomages" table.
	RoomagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "room_age", Type: field.TypeInt},
		{Name: "text", Type: field.TypeString},
	}
	// RoomagesTable holds the schema information for the "roomages" table.
	RoomagesTable = &schema.Table{
		Name:        "roomages",
		Columns:     RoomagesColumns,
		PrimaryKey:  []*schema.Column{RoomagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_email", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "user_status_userstatus_user", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_user_status_UserstatusUser",
				Columns: []*schema.Column{UsersColumns[3]},

				RefColumns: []*schema.Column{UserStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserStatusColumns holds the columns for the "user_status" table.
	UserStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_status", Type: field.TypeString},
	}
	// UserStatusTable holds the schema information for the "user_status" table.
	UserStatusTable = &schema.Table{
		Name:        "user_status",
		Columns:     UserStatusColumns,
		PrimaryKey:  []*schema.Column{UserStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		InsurancesTable,
		RentsTable,
		RoomsTable,
		RoomStatusTable,
		RoomTypesTable,
		RoomagesTable,
		UsersTable,
		UserStatusTable,
	}
)

func init() {
	RentsTable.ForeignKeys[0].RefTable = InsurancesTable
	RentsTable.ForeignKeys[1].RefTable = RoomsTable
	RentsTable.ForeignKeys[2].RefTable = RoomagesTable
	RentsTable.ForeignKeys[3].RefTable = UsersTable
	RoomsTable.ForeignKeys[0].RefTable = RoomStatusTable
	RoomsTable.ForeignKeys[1].RefTable = RoomTypesTable
	UsersTable.ForeignKeys[0].RefTable = UserStatusTable
}
