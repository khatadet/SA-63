// Code generated by entc, DO NOT EDIT.

package rent

const (
	// Label holds the string label denoting the rent type in the database.
	Label = "rent"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRentAge holds the string denoting the rentage field in the database.
	FieldRentAge = "rent_age"
	// FieldCidUser holds the string denoting the ciduser field in the database.
	FieldCidUser = "cid_user"
	// FieldRentDate holds the string denoting the rentdate field in the database.
	FieldRentDate = "rent_date"

	// EdgeRentRoom holds the string denoting the rentroom edge name in mutations.
	EdgeRentRoom = "RentRoom"
	// EdgeRentUser holds the string denoting the rentuser edge name in mutations.
	EdgeRentUser = "RentUser"
	// EdgeRentInsurance holds the string denoting the rentinsurance edge name in mutations.
	EdgeRentInsurance = "RentInsurance"
	// EdgeRentRoomage holds the string denoting the rentroomage edge name in mutations.
	EdgeRentRoomage = "RentRoomage"

	// Table holds the table name of the rent in the database.
	Table = "rents"
	// RentRoomTable is the table the holds the RentRoom relation/edge.
	RentRoomTable = "rents"
	// RentRoomInverseTable is the table name for the Room entity.
	// It exists in this package in order to avoid circular dependency with the "room" package.
	RentRoomInverseTable = "rooms"
	// RentRoomColumn is the table column denoting the RentRoom relation/edge.
	RentRoomColumn = "room_room_rent"
	// RentUserTable is the table the holds the RentUser relation/edge.
	RentUserTable = "rents"
	// RentUserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	RentUserInverseTable = "users"
	// RentUserColumn is the table column denoting the RentUser relation/edge.
	RentUserColumn = "user_user_rent"
	// RentInsuranceTable is the table the holds the RentInsurance relation/edge.
	RentInsuranceTable = "rents"
	// RentInsuranceInverseTable is the table name for the Insurance entity.
	// It exists in this package in order to avoid circular dependency with the "insurance" package.
	RentInsuranceInverseTable = "insurances"
	// RentInsuranceColumn is the table column denoting the RentInsurance relation/edge.
	RentInsuranceColumn = "insurance_insurance_rent"
	// RentRoomageTable is the table the holds the RentRoomage relation/edge.
	RentRoomageTable = "rents"
	// RentRoomageInverseTable is the table name for the Roomage entity.
	// It exists in this package in order to avoid circular dependency with the "roomage" package.
	RentRoomageInverseTable = "roomages"
	// RentRoomageColumn is the table column denoting the RentRoomage relation/edge.
	RentRoomageColumn = "roomage_roomage_rent"
)

// Columns holds all SQL columns for rent fields.
var Columns = []string{
	FieldID,
	FieldRentAge,
	FieldCidUser,
	FieldRentDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Rent type.
var ForeignKeys = []string{
	"insurance_insurance_rent",
	"room_room_rent",
	"roomage_roomage_rent",
	"user_user_rent",
}

var (
	// RentAgeValidator is a validator for the "RentAge" field. It is called by the builders before save.
	RentAgeValidator func(string) error
	// CidUserValidator is a validator for the "CidUser" field. It is called by the builders before save.
	CidUserValidator func(string) error
	// RentDateValidator is a validator for the "RentDate" field. It is called by the builders before save.
	RentDateValidator func(string) error
)
