// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserEmail holds the string denoting the useremail field in the database.
	FieldUserEmail = "user_email"
	// FieldNAME holds the string denoting the name field in the database.
	FieldNAME = "name"

	// EdgeUserRent holds the string denoting the userrent edge name in mutations.
	EdgeUserRent = "UserRent"
	// EdgeUserUserstatus holds the string denoting the useruserstatus edge name in mutations.
	EdgeUserUserstatus = "UserUserstatus"

	// Table holds the table name of the user in the database.
	Table = "users"
	// UserRentTable is the table the holds the UserRent relation/edge.
	UserRentTable = "rents"
	// UserRentInverseTable is the table name for the Rent entity.
	// It exists in this package in order to avoid circular dependency with the "rent" package.
	UserRentInverseTable = "rents"
	// UserRentColumn is the table column denoting the UserRent relation/edge.
	UserRentColumn = "user_user_rent"
	// UserUserstatusTable is the table the holds the UserUserstatus relation/edge.
	UserUserstatusTable = "users"
	// UserUserstatusInverseTable is the table name for the UserStatus entity.
	// It exists in this package in order to avoid circular dependency with the "userstatus" package.
	UserUserstatusInverseTable = "user_status"
	// UserUserstatusColumn is the table column denoting the UserUserstatus relation/edge.
	UserUserstatusColumn = "user_status_userstatus_user"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUserEmail,
	FieldNAME,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the User type.
var ForeignKeys = []string{
	"user_status_userstatus_user",
}
