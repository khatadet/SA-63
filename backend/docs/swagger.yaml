basePath: /api/v1
definitions:
  controllers.Rent:
    properties:
      cidUser:
        type: string
      insurance:
        type: integer
      rentAge:
        type: string
      rentDate:
        type: string
      room:
        type: integer
      roomage:
        type: integer
      user:
        type: integer
    type: object
  ent.Insurance:
    properties:
      Insurance:
        description: Insurance holds the value of the "Insurance" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.InsuranceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the InsuranceQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.InsuranceEdges:
    properties:
      insuranceRent:
        description: InsuranceRent holds the value of the InsuranceRent edge.
        items:
          $ref: '#/definitions/ent.Rent'
        type: array
    type: object
  ent.Rent:
    properties:
      CidUser:
        description: CidUser holds the value of the "CidUser" field.
        type: string
      RentAge:
        description: RentAge holds the value of the "RentAge" field.
        type: string
      RentDate:
        description: RentDate holds the value of the "RentDate" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RentQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RentEdges:
    properties:
      rentInsurance:
        $ref: '#/definitions/ent.Insurance'
        description: RentInsurance holds the value of the RentInsurance edge.
        type: object
      rentRoom:
        $ref: '#/definitions/ent.Room'
        description: RentRoom holds the value of the RentRoom edge.
        type: object
      rentRoomage:
        $ref: '#/definitions/ent.Roomage'
        description: RentRoomage holds the value of the RentRoomage edge.
        type: object
      rentUser:
        $ref: '#/definitions/ent.User'
        description: RentUser holds the value of the RentUser edge.
        type: object
    type: object
  ent.Room:
    properties:
      edges:
        $ref: '#/definitions/ent.RoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RoomEdges:
    properties:
      roomRent:
        description: RoomRent holds the value of the RoomRent edge.
        items:
          $ref: '#/definitions/ent.Rent'
        type: array
      roomRoomstatus:
        $ref: '#/definitions/ent.RoomStatus'
        description: RoomRoomstatus holds the value of the RoomRoomstatus edge.
        type: object
      roomRoomtype:
        $ref: '#/definitions/ent.RoomType'
        description: RoomRoomtype holds the value of the RoomRoomtype edge.
        type: object
    type: object
  ent.RoomStatus:
    properties:
      RoomStatus:
        description: RoomStatus holds the value of the "RoomStatus" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RoomStatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomStatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RoomStatusEdges:
    properties:
      roomstatusRoom:
        description: RoomstatusRoom holds the value of the RoomstatusRoom edge.
        items:
          $ref: '#/definitions/ent.Room'
        type: array
    type: object
  ent.RoomType:
    properties:
      COST:
        description: COST holds the value of the "COST" field.
        type: integer
      RoomType:
        description: RoomType holds the value of the "RoomType" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RoomTypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomTypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RoomTypeEdges:
    properties:
      roomtypeRoom:
        description: RoomtypeRoom holds the value of the RoomtypeRoom edge.
        items:
          $ref: '#/definitions/ent.Room'
        type: array
    type: object
  ent.Roomage:
    properties:
      RoomAge:
        description: RoomAge holds the value of the "RoomAge" field.
        type: integer
      Text:
        description: Text holds the value of the "Text" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RoomageEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomageQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RoomageEdges:
    properties:
      roomageRent:
        description: RoomageRent holds the value of the RoomageRent edge.
        items:
          $ref: '#/definitions/ent.Rent'
        type: array
    type: object
  ent.User:
    properties:
      NAME:
        description: NAME holds the value of the "NAME" field.
        type: string
      UserEmail:
        description: UserEmail holds the value of the "UserEmail" field.
        type: string
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.UserEdges:
    properties:
      userRent:
        description: UserRent holds the value of the UserRent edge.
        items:
          $ref: '#/definitions/ent.Rent'
        type: array
      userUserstatus:
        $ref: '#/definitions/ent.UserStatus'
        description: UserUserstatus holds the value of the UserUserstatus edge.
        type: object
    type: object
  ent.UserStatus:
    properties:
      UserStatus:
        description: UserStatus holds the value of the "UserStatus" field.
        type: string
      edges:
        $ref: '#/definitions/ent.UserStatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserStatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.UserStatusEdges:
    properties:
      userstatusUser:
        description: UserstatusUser holds the value of the UserstatusUser edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /Insurances:
    post:
      consumes:
      - application/json
      description: Create Insurance
      operationId: create-Insurance
      parameters:
      - description: Insurance entity
        in: body
        name: Insurance
        required: true
        schema:
          $ref: '#/definitions/ent.Insurance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Insurance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Insurance
  /RoomStatuss:
    post:
      consumes:
      - application/json
      description: Create RoomStatus
      operationId: create-RoomStatus
      parameters:
      - description: RoomStatus entity
        in: body
        name: RoomStatus
        required: true
        schema:
          $ref: '#/definitions/ent.RoomStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.RoomStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create RoomStatus
  /RoomTypes:
    post:
      consumes:
      - application/json
      description: Create RoomType
      operationId: create-RoomType
      parameters:
      - description: RoomType entity
        in: body
        name: RoomType
        required: true
        schema:
          $ref: '#/definitions/ent.RoomType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.RoomType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create RoomType
  /Roomages:
    post:
      consumes:
      - application/json
      description: Create Roomage
      operationId: create-Roomage
      parameters:
      - description: Roomage entity
        in: body
        name: Roomage
        required: true
        schema:
          $ref: '#/definitions/ent.Roomage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Roomage
  /Rooms:
    post:
      consumes:
      - application/json
      description: Create Room
      operationId: create-Room
      parameters:
      - description: Room entity
        in: body
        name: Room
        required: true
        schema:
          $ref: '#/definitions/ent.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Room
  /UserStatuss:
    post:
      consumes:
      - application/json
      description: Create UserStatus
      operationId: create-UserStatus
      parameters:
      - description: UserStatus entity
        in: body
        name: UserStatus
        required: true
        schema:
          $ref: '#/definitions/ent.UserStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.UserStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create UserStatus
  /insurances:
    get:
      description: list insurance entities
      operationId: list-insurance
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Insurance'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List insurance entities
  /insurances/{id}:
    get:
      description: get Insurance by ID
      operationId: get-insurance
      parameters:
      - description: Insurance ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Insurance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Insurance entity by ID
    put:
      consumes:
      - application/json
      description: update insurance by ID
      operationId: update-insurance
      parameters:
      - description: Insurance ID
        in: path
        name: id
        required: true
        type: integer
      - description: Insurance entity
        in: body
        name: insurance
        required: true
        schema:
          $ref: '#/definitions/ent.Insurance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Insurance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a insurance entity by ID
  /rents:
    get:
      description: list rent entities
      operationId: list-rent
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Rent'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List rent entities
    post:
      consumes:
      - application/json
      description: Create Rent
      operationId: create-Rent
      parameters:
      - description: Rent entity
        in: body
        name: Rent
        required: true
        schema:
          $ref: '#/definitions/controllers.Rent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Rent'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create Rent
  /rents/{id}:
    delete:
      description: get rent by ID
      operationId: delete-rent
      parameters:
      - description: Rent ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a rent entity by ID
    get:
      description: get Rent by ID
      operationId: get-rent
      parameters:
      - description: Rent ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Rent'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Rent entity by ID
  /roomages:
    get:
      description: list roomage entities
      operationId: list-roomage
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Roomage'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List roomage entities
  /roomages/{id}:
    get:
      description: get Roomage by ID
      operationId: get-roomage
      parameters:
      - description: Roomage ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Roomage entity by ID
    put:
      consumes:
      - application/json
      description: update roomage by ID
      operationId: update-roomage
      parameters:
      - description: Roomage ID
        in: path
        name: id
        required: true
        type: integer
      - description: Roomage entity
        in: body
        name: roomage
        required: true
        schema:
          $ref: '#/definitions/ent.Roomage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a roomage entity by ID
  /rooms:
    get:
      description: list room entities
      operationId: list-room
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Room'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List room entities
  /rooms/{id}:
    get:
      description: get Room by ID
      operationId: get-room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Room entity by ID
    put:
      consumes:
      - application/json
      description: update room by ID
      operationId: update-room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Room entity
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/ent.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a room entity by ID
  /roomstatuss:
    get:
      description: list roomstatus entities
      operationId: list-roomstatus
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.RoomStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List roomstatus entities
  /roomstatuss/{id}:
    get:
      description: get RoomStatus by ID
      operationId: get-roomstatus
      parameters:
      - description: RoomStatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.RoomStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a RoomStatus entity by ID
    put:
      consumes:
      - application/json
      description: update roomstatus by ID
      operationId: update-roomstatus
      parameters:
      - description: RoomStatus ID
        in: path
        name: id
        required: true
        type: integer
      - description: RoomStatus entity
        in: body
        name: roomstatus
        required: true
        schema:
          $ref: '#/definitions/ent.RoomStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.RoomStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a roomstatus entity by ID
  /roomtypes:
    get:
      description: list roomtype entities
      operationId: list-roomtype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.RoomType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List roomtype entities
  /roomtypes/{id}:
    get:
      description: get RoomType by ID
      operationId: get-roomtype
      parameters:
      - description: RoomType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.RoomType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a RoomType entity by ID
    put:
      consumes:
      - application/json
      description: update roomtype by ID
      operationId: update-roomtype
      parameters:
      - description: RoomType ID
        in: path
        name: id
        required: true
        type: integer
      - description: RoomType entity
        in: body
        name: roomtype
        required: true
        schema:
          $ref: '#/definitions/ent.RoomType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.RoomType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a roomtype entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
  /userstatuss:
    get:
      description: list userstatus entities
      operationId: list-userstatus
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.UserStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List userstatus entities
  /userstatuss/{id}:
    get:
      description: get UserStatus by ID
      operationId: get-userstatus
      parameters:
      - description: UserStatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.UserStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a UserStatus entity by ID
    put:
      consumes:
      - application/json
      description: update userstatus by ID
      operationId: update-userstatus
      parameters:
      - description: UserStatus ID
        in: path
        name: id
        required: true
        type: integer
      - description: UserStatus entity
        in: body
        name: userstatus
        required: true
        schema:
          $ref: '#/definitions/ent.UserStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.UserStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a userstatus entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
