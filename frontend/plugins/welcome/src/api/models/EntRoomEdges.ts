/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntRent,
    EntRentFromJSON,
    EntRentFromJSONTyped,
    EntRentToJSON,
    EntRoomStatus,
    EntRoomStatusFromJSON,
    EntRoomStatusFromJSONTyped,
    EntRoomStatusToJSON,
    EntRoomType,
    EntRoomTypeFromJSON,
    EntRoomTypeFromJSONTyped,
    EntRoomTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntRoomEdges
 */
export interface EntRoomEdges {
    /**
     * RoomRent holds the value of the RoomRent edge.
     * @type {Array<EntRent>}
     * @memberof EntRoomEdges
     */
    roomRent?: Array<EntRent>;
    /**
     * 
     * @type {EntRoomStatus}
     * @memberof EntRoomEdges
     */
    roomRoomstatus?: EntRoomStatus;
    /**
     * 
     * @type {EntRoomType}
     * @memberof EntRoomEdges
     */
    roomRoomtype?: EntRoomType;
}

export function EntRoomEdgesFromJSON(json: any): EntRoomEdges {
    return EntRoomEdgesFromJSONTyped(json, false);
}

export function EntRoomEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntRoomEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomRent': !exists(json, 'roomRent') ? undefined : ((json['roomRent'] as Array<any>).map(EntRentFromJSON)),
        'roomRoomstatus': !exists(json, 'roomRoomstatus') ? undefined : EntRoomStatusFromJSON(json['roomRoomstatus']),
        'roomRoomtype': !exists(json, 'roomRoomtype') ? undefined : EntRoomTypeFromJSON(json['roomRoomtype']),
    };
}

export function EntRoomEdgesToJSON(value?: EntRoomEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomRent': value.roomRent === undefined ? undefined : ((value.roomRent as Array<any>).map(EntRentToJSON)),
        'roomRoomstatus': EntRoomStatusToJSON(value.roomRoomstatus),
        'roomRoomtype': EntRoomTypeToJSON(value.roomRoomtype),
    };
}


