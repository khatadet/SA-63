/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntRentEdges,
    EntRentEdgesFromJSON,
    EntRentEdgesFromJSONTyped,
    EntRentEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntRent
 */
export interface EntRent {
    /**
     * CidUser holds the value of the "CidUser" field.
     * @type {string}
     * @memberof EntRent
     */
    cidUser?: string;
    /**
     * RentAge holds the value of the "RentAge" field.
     * @type {string}
     * @memberof EntRent
     */
    rentAge?: string;
    /**
     * RentDate holds the value of the "RentDate" field.
     * @type {string}
     * @memberof EntRent
     */
    rentDate?: string;
    /**
     * 
     * @type {EntRentEdges}
     * @memberof EntRent
     */
    edges?: EntRentEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntRent
     */
    id?: number;
}

export function EntRentFromJSON(json: any): EntRent {
    return EntRentFromJSONTyped(json, false);
}

export function EntRentFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntRent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cidUser': !exists(json, 'CidUser') ? undefined : json['CidUser'],
        'rentAge': !exists(json, 'RentAge') ? undefined : json['RentAge'],
        'rentDate': !exists(json, 'RentDate') ? undefined : json['RentDate'],
        'edges': !exists(json, 'edges') ? undefined : EntRentEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function EntRentToJSON(value?: EntRent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CidUser': value.cidUser,
        'RentAge': value.rentAge,
        'RentDate': value.rentDate,
        'edges': EntRentEdgesToJSON(value.edges),
        'id': value.id,
    };
}


